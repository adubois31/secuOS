- BSS = zone mémoire init à 0 
- Comment firmware sait quel truc à charger : bios -> bootsector (routine / code x86 = "bootloader il est là" -> ) -> bootloader (voir schéma)
- Maintenant plus simple on passe direct bios à elf ?
- Windows = praticité = mettre bootloader sur toutes les device
- Intel manual -> Sector 3 chap jusque 6
- Régler l'erreur du make 
	-> vi ../kernel/include/print.h
	-> changer snprintf -> 1,3 -> devient 1,4
- combinaison de touche avec chevron = en même temps

:= pour arrêter de faire des sustitution (par défaut c'est mieux)
= continuer substituer à l'intérieur

segment peut contenir plusieurs sections
segment = truc copié collé au chargement en mémoire sans se poser de question
section = truc qui se passe à la compilation = comment on assemble les .o

OUTPUT_ARCH indique le cpu à utiliser (mode protégé et 32bits ici)
pour trouver l'entry point : grep -nr entry ../kernel
bootloader donne le point d'entry -> on jump là 

PHDR = program header = qu'est ce qu'il faut copier et avec quels attributs (on voit avec readelf)
Les FLAGS indiquent les droits rwx
padding = nop / 0xcacaca

ex section : 
.mbh : {} : .phboot <- ça ça indique où on le met dans quel header


QUESTIONS :

1) 0x300000 - 0x3002010
   0x2000 pour le stack et 0x10 pour mbh

2) 
